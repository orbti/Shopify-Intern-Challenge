Fall 2022 Data Science Intern Challenge 


Please complete the following questions and provide your thought process/work. You can attach your work in a text file, 
link, etc. on the application page. Please ensure answers are easily visible for reviewers!




Question 1: Given some sample data, write a program to answer the following: click here to access the required data set


On Shopify, we have exactly 100 sneaker shops, and each of these shops sells only one model of shoe. 
We want to do some analysis of the average order value (AOV). When we look at orders data over a 30 day window, 
we naively calculate an AOV of $3145.13. Given that we know these shops are selling sneakers, 
a relatively affordable item, something seems wrong with our analysis. 


1. Think about what could be going wrong with our calculation. Think about a better way to evaluate this data.

The first thing I think about is that there are some orders that are very large. This will pull the mean towards these orders.
I looked at the dataset and found there were some orders that were $70,400.00. Most of the data lays between $163.00 and $390.00 
One way to evaluate this data would be to use the median instead of the mean. In my Jupyter notebook I graphed a histogram. 
The data is heavily skewed to the right. I used a logarithmic scale to better represent the data on the histogram. 
I also plotted a vertical line representing the mean and a vertical line representing the median. You can see that the large 
values are pulling the mean to the right. I then cut out the outliers by removing all values that are larger than the 0.98 quantile. 
I plotted the median and mean of this new dataset as vertical lines. This will allow the mean to be a better representation of the data. 
I would still use the median as a value to represent the data.

I also wanted to look at what shops are having such large order amounts and look at their amount per order and amount per item. 
I created a dataframe to aggregate order_amount, number of orders and items per order by shop. I added three new columns to show 
amount per order, amount per item and items per order. Shop_id 78 and 42 stick out. Shop_id 42 has a very large amount per order 
compared to the rest of the shops. The amount per item is not to hight. Shop_id 78 on the other hand has a very large amount 
per order size and amount per item, $49,213.04 and $25,725.00 respectively.

 
2. What metric would you report for this dataset?

I would use the median for this dataset to best describe the amount per order. I would also add that there were two outliers, shop 42 and 72.
These two shops had on average the same number of orders but those order amounts on average were significantly larger than the majority of the
the other shops. Shop 42 amount per item was close to the rest of the shops. Shop 72 amount per item was significantly larger than the rest of
shops at $25,725.00.

3. What is its value?

The median for all order amounts is $284.00.



Question 2: For this question you’ll need to use SQL. Follow this link to access the data set required for the challenge. 
Please use queries to answer the following questions. Paste your queries along with your final numerical answers below.


1. How many orders were shipped by Speedy Express in total?

SELECT ShipperName, count(OrderID) num_shipments FROM Orders
join Shippers on orders.ShipperID = Shippers.ShipperID
where ShipperName = 'Speedy Express'
group by ShipperName

Speedy Express made 54 shipments in total.

2. What is the last name of the employee with the most orders?

SELECT LastName, count(OrderID) num_orders  FROM Employees
join Orders on Employees.EmployeeID = Orders.EmployeeID
group by LastName
order by num_orders desc
limit 1

The last name of the employee with the most orders is Peacock with 40 orders.

3. What product was ordered the most by customers in Germany?

SELECT ProductName, sum(Quantity) total_ordered FROM Customers
join Orders on Customers.CustomerID = Orders.CustomerID
join OrderDetails on Orders.OrderID = OrderDetails.OrderID
join Products on OrderDetails.ProductID = Products.ProductID
where country = 'Germany'
group by ProductName
order by total_ordered desc
limit 1

Boston Crab Meat was the product ordered the most by customers in Germany with a total of 160 orders.
